const config = require('../config');
const { cmd } = require('../command');
const axios = require('axios');

// API LINK
const apilink = 'https://dizer-adaderana-news-api.vercel.app/news';

// ‡∂∫‡∑Ä‡∂¥‡∑î ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ß‡∑ä‚Äç‡∂ª‡∑ê‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
let sentNews = new Set();
const newsIntervals = new Map(); // JID ‡∂ë‡∂ö‡∂ß interval ‡∂ß‡∑ä‚Äç‡∂ª‡∑ê‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±

// Start Derana News Command
cmd({
    pattern: "startnews",
    alias: ["breckingnews"],
    react: "üìë",
    desc: "‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂Ü‡∂¥‡∑î ‡∑Ä‡∑í‡∂ú‡∑É ‡∂∫‡∑Ä‡∂∫‡∑í, ‡∂ë‡∂ö‡∂∏ ‡∂¥‡∑î‡∑Ä‡∂≠ ‡∂Ü‡∂∫‡∑ô ‡∂ë‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∂≠.",
    use: ".startderana <jid>",
    category: "‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        if (!isOwner) return reply("*`‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∂ß ‡∂¥‡∂∏‡∂´‡∂∫‡∑í`*");

        if (!q) return reply("*`JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±, ‡∂ã‡∂Ø‡∑è: .startderana 94774589636@s.whatsapp.net ‡∑Ñ‡∑ù 120363401755639074@newsletter`*");

        const targetJid = q.trim();

        // JID ‡∂ë‡∂ö ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂Ø‡∑ê‡∂∫‡∑í ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∂∏‡∂ü)
        const validFormats = ['@s.whatsapp.net', '@g.us', '@newsletter'];
        let isValid = false;

        for (let format of validFormats) {
            if (targetJid.includes(format)) {
                isValid = true;
                break;
            }
        }

        if (!isValid) {
            return reply("*`‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ú‡∑Ä‡∑ö! WhatsApp JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (‡∂ã‡∂Ø‡∑è: 94774589636@s.whatsapp.net, @g.us ‡∑Ñ‡∑ù @newsletter)`*");
        }

        // ‡∂í JID ‡∂ë‡∂ö‡∂ß ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä interval ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ô‡∂±‡∑Ä‡∂Ø ‡∂∂‡∂Ω‡∂±‡∑ä‡∂±
        if (newsIntervals.has(targetJid)) {
            return reply(`‡∂∏‡∑ö JID ‡∂ë‡∂ö‡∂ß ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è: ${targetJid}`);
        }

        reply(`‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂Ü‡∂¥‡∑î ‡∑Ä‡∑í‡∂ú‡∑É ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è JID ‡∂ë‡∂ö‡∂ß: ${targetJid}! üìë\n> „ãõÔ∏é ·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è   Íú±·¥è ü·¥è  ü·¥á·¥†·¥á ü…™…¥…¢ ·¥ä…™…¥ ú·¥ú·¥°·¥Ä`);

        // Target JID ‡∂ë‡∂ö‡∂ß confirmation message ‡∂∫‡∑Ä‡∂±‡∑Ä‡∑è
        await conn.sendMessage(targetJid, { 
            text: `üìë *Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∑Ä‡∑î‡∂´‡∑è!* üìë\n> ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂Ü‡∂¥‡∑î ‡∑Ä‡∑í‡∂ú‡∑É ‡∂î‡∂∂‡∂ß ‡∂Ω‡∑ê‡∂∂‡∑ô‡∂±‡∑Ä‡∑è.\n> „ãõÔ∏é ·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è   Íú±·¥è ü·¥è  ü·¥á·¥†·¥á ü…™…¥…¢ ·¥ä…™…¥ ú·¥ú·¥°·¥Ä`
        });

        // ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂†‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂∫‡∑Ä‡∂± ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫
        const checkAndSendNews = async () => {
            try {
                const response = await axios.get(apilink);
                const newsList = response.data; // Assuming API returns an array of news

                if (!Array.isArray(newsList)) {
                    console.error("API ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä array ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑î‡∂´‡∑ö ‡∂±‡∑ê‡∂≠:", newsList);
                    return;
                }

                // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∂¥‡∑î‡∑Ä‡∂≠ ‡∂∂‡∂Ω‡∂±‡∑ä‡∂±
                for (let news of newsList) {
                    const newsId = news.title + news.time; // Unique identifier for news
                    if (!sentNews.has(newsId)) {
                        sentNews.add(newsId);

                        const msg = `
üìë ùêÉùêÑùêëùêÄùêçùêÄ ùêçùêÑùêñùêí üìë

*‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è‡∑Ä -:* _~${news.title || '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è'}~_
*‡∂¥‡∑î‡∑Ä‡∂≠ -:* _${news.description || '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è'}_
*‡∂Ø‡∑í‡∂±‡∂∫ -:* _${news.time || '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è'}_
*‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä -:* _${news.new_url || '‡∂±‡∑ú‡∂Ø‡∂±‡∑ä‡∂±‡∑è'}_

*üì© ‡∂∫‡∑Ä‡∂± ‡∂Ω‡∂Ø‡∑ä‡∂Ø‡∑ö: ${targetJid}*
> „ãõÔ∏é ·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è Íú±·¥è ü·¥è  ü·¥á·¥†·¥á ü…™…¥…¢ ·¥ä…™…¥ ú·¥ú·¥°·¥Ä
                        `;

                        if (news.image) {
                            await conn.sendMessage(targetJid, { 
                                image: { url: news.image }, 
                                caption: msg 
                            });
                        } else {
                            await conn.sendMessage(targetJid, { 
                                text: msg 
                            });
                        }

                        console.log(`‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä Derana ‡∂¥‡∑î‡∑Ä‡∂≠ ‡∂∫‡∑ê‡∑Ä‡∑ä‡∑Ä‡∑è: ${news.title} -> ${targetJid}`);
                        break; // ‡∂ë‡∂ö ‡∑Ä‡∂≠‡∑è‡∑Ä‡∂ö‡∂ß ‡∂ë‡∂ö ‡∂¥‡∑î‡∑Ä‡∂≠‡∂ö‡∑ä ‡∑Ä‡∑í‡∂≠‡∂ª‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
                    }
                }
            } catch (e) {
                console.error('‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∂Ø‡∑ù‡∑Ç‡∂∫:', e);
            }
        };

        // ‡∑É‡∑ë‡∂∏ ‡∂≠‡∂≠‡∑ä‡∂¥‡∂ª 30‡∂ö‡∂ß ‡∑Ä‡∂ª‡∂ö‡∑ä API ‡∂†‡∑ô‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è
        const intervalId = setInterval(checkAndSendNews, 30 * 1000);
        newsIntervals.set(targetJid, intervalId); // Interval ‡∂ë‡∂ö store ‡∂ö‡∂ª‡∂±‡∑Ä‡∑è

    } catch (e) {
        console.log(e);
        reply(`‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä: ${e}`);
    }
});

// Stop Derana News Command
cmd({
    pattern: "stopnews",
    alias: ["stopnews3"],
    react: "üõë",
    desc: "Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂±‡∑Ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∑í",
    use: ".stopderana <jid>",
    category: "‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        if (!isOwner) return reply("*`‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∂ß ‡∂¥‡∂∏‡∂´‡∂∫‡∑í`*");

        if (!q) return reply("*`JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±, ‡∂ã‡∂Ø‡∑è: .stopderana 94774589636@s.whatsapp.net ‡∑Ñ‡∑ù 120363401755639074@newsletter`*");

        const targetJid = q.trim();

        // JID ‡∂ë‡∂ö ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂Ø‡∑ê‡∂∫‡∑í ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∂∏‡∂ü)
        const validFormats = ['@s.whatsapp.net', '@g.us', '@newsletter'];
        let isValid = false;

        for (let format of validFormats) {
            if (targetJid.includes(format)) {
                isValid = true;
                break;
            }
        }

        if (!isValid) {
            return reply("*`‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ú‡∑Ä‡∑ö! WhatsApp JID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (‡∂ã‡∂Ø‡∑è: 9477458936@s.whatsapp.net, @g.us ‡∑Ñ‡∑ù @newsletter)`*");
        }

        if (!newsIntervals.has(targetJid)) {
            return reply(`‡∂∏‡∑ö JID ‡∂ë‡∂ö‡∂ß ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ô‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∂≠: ${targetJid}`);
        }

        clearInterval(newsIntervals.get(targetJid));
        newsIntervals.delete(targetJid);

        // Target JID ‡∂ë‡∂ö‡∂ß stop confirmation message ‡∂∫‡∑Ä‡∂±‡∑Ä‡∑è
        await conn.sendMessage(targetJid, { 
            text: `üõë *Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂±‡∑ê‡∑Ä‡∑ê‡∂≠‡∑ä‡∑Ä‡∑î‡∂´‡∑è!* üõë\n> ‡∂≠‡∑Ä‡∂≠‡∑ä ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ë‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∂≠.\n> „ãõÔ∏é ·¥ò·¥è·¥°·¥á Ä·¥Ö  ô è   Íú±·¥è ü·¥è  ü·¥á·¥†·¥á ü…™…¥…¢ ·¥ä…™…¥ ú·¥ú·¥°·¥Ä`
        });

        reply(`Derana ‡∂¥‡∑î‡∑Ä‡∂≠‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂±‡∑ê‡∑Ä‡∑ê‡∂≠‡∑ä‡∑Ä‡∑î‡∑Ä‡∑è: ${targetJid}`);

    } catch (e) {
        console.log(e);
        reply(`‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä: ${e}`);
    }
});